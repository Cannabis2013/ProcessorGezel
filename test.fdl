dp adder(in A, B : tc(32); out R : tc(32)){

        always {
                R = A + B;
        }
}

dp testAdder(out A, B : tc(32); in R : tc(32)){

        sfg test_0 {
                A=3; B=6;
                $display($dec,"Cycle:",$cycle, ", A=",A, ",B=", B,", R=", R);
        }
        sfg test_1 {
                A=23;B=17;
                $display($dec,"Cycle:",$cycle, ", A=",A, ",B=", B,", R=", R);
        }

        sfg test_2 {
                A=12;B=0;

                $display($dec,"Cycle:",$cycle, ", A=",A, ",B=", B,", R=", R);
        }
}


dp multiplexer(in A, B : tc(32);in S : ns(1); out R : tc(32)){

        always {
                R = S ? B : A;
        }
}

dp testMultiplexer(out A, B : tc(32);out S : ns(1); in R : tc(32)){

        always{
                $display($dec,"Cycle:",$cycle, ", A=",A, ",B=", B,",S=",S,"R=", R);
        }
        sfg test_3 {
                A=3; B=6;S=1;
        }
        sfg test_4 {
                A=3; B=6;S=0;
        }

}

fsm f_testbench(testAdder,testMultiplexer){
        initial s0;
        state s1,s2,s3,s4;
        @s0(test_0) -> s1;
        @s1(test_1) -> s2;
        @s2(test_2) -> s3;
        @s3(test_3) -> s4;
        $s4(test_4) -> s0;
}

system PCsystem{
        adder(A,B,R);
        testAdder(A,B,R)
        multiplexer(A,B,S,R);
        testMultiplexer(A,B,S,R);
}
